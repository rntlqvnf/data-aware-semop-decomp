- name: ExecutePythonCode
  description: "Executes an arbitrary Python code snippet using the given variables. Allows flexible custom logic, such as filtering, transformation, or condition checks. The output variables created inside the code must be explicitly listed."
  modality: common
  inputs:
    - { name: "code_string", type: "str" }
    - { name: "*", type: "Any", desc: "Wildcard input. Specify all variable names referenced inside the code snippet." }
  outputs:
    - { name: "*", type: "Any", desc: "Wildcard output. List of variable names created inside the code that should be saved into context." }
  implementations:
    - implementation_name: "Python_Exec"
      source: "core_framework"
      metrics: { latency_ms: 1, cost_usd_per_image: 0.0, accuracy: 1.0, vram_mb: 0 }

- name: FilterByBoolean
  description: "Controls execution flow based on a boolean condition. If the input is False, skips all remaining steps for the current item."
  modality: common
  inputs:
    - { name: "condition", type: "bool" }
  outputs: []
  implementations:
    - implementation_name: "Boolean_Filter"
      source: "core_framework"
      metrics: { latency_ms: 0.1, cost_usd_per_image: 0.0, accuracy: 1.0, vram_mb: 0 }

- name: CreateDictionary
  description: "Creates a dictionary object from a set of key-value pairs. Useful for bundling related variables together for later use."
  modality: common
  inputs:
    - { name: "data", type: "Dict[str, Any]", desc: "Key-value mapping. Example: {'key1': var1, 'key2': var2}" }
  outputs:
    - { name: "dictionary_object", type: "Dict" }
  implementations:
    - implementation_name: "Dict_Creator"
      source: "core_framework"
      metrics: { latency_ms: 0.1, cost_usd_per_image: 0.0, accuracy: 1.0, vram_mb: 0 }

- name: GetDictionaryValue
  description: "Retrieves the value associated with a specific key from a dictionary object."
  modality: common
  inputs:
    - { name: "dictionary_object", type: "Dict" }
    - { name: "key", type: "str" }
  outputs:
    - { name: "value", type: "Any" }
  implementations:
    - implementation_name: "Dict_Accessor"
      source: "core_framework"
      metrics: { latency_ms: 0.1, cost_usd_per_image: 0.0, accuracy: 1.0, vram_mb: 0 }

- name: LogVariable
  description: "Logs the value of a variable for debugging or tracing purposes. Optionally include a custom message prefix."
  modality: common
  inputs:
    - { name: "variable_to_log", type: "Any" }
    - { name: "message", type: "str", optional: true, desc: "Optional custom message to print before the value." }
  outputs: []
  implementations:
    - implementation_name: "Console_Logger"
      source: "core_framework"
      metrics: { latency_ms: 0.5, cost_usd_per_image: 0.0, accuracy: 1.0, vram_mb: 0 }

- name: SaveToFile
  description: "Saves the given data object to a specified file path. Can be used for intermediate results or final outputs."
  modality: common
  inputs:
    - { name: "data_to_save", type: "Any" }
    - { name: "file_path", type: "str" }
  outputs: []
  implementations:
    - implementation_name: "File_Saver"
      source: "core_framework"
      metrics: { latency_ms: 10, cost_usd_per_image: 0.0, accuracy: 1.0, vram_mb: 0 }
